// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This code is generated by Magic Modules using the following:
//
//     Configuration: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/networksecurity/SecurityProfile.yaml
//     Template:      https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/tgc_next/services/resource.go.tmpl
//
//     DO NOT EDIT this file directly. Any changes made to this file will be
//     overwritten during the next generation cycle.
//
// ----------------------------------------------------------------------------

package networksecurity

import (
	"bytes"
	"context"
	"fmt"
	"log"
	"reflect"
	"regexp"
	"sort"
	"strconv"
	"strings"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"

	"github.com/GoogleCloudPlatform/terraform-google-conversion/v7/pkg/tgcresource"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v7/pkg/tpgresource"
	transport_tpg "github.com/GoogleCloudPlatform/terraform-google-conversion/v7/pkg/transport"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v7/pkg/verify"
)

var (
	_ = bytes.Clone
	_ = context.WithCancel
	_ = fmt.Sprintf
	_ = log.Print
	_ = reflect.ValueOf
	_ = regexp.Match
	_ = sort.IntSlice{}
	_ = strconv.Atoi
	_ = strings.Trim
	_ = schema.Noop
	_ = validation.All
	_ = tgcresource.RemoveTerraformAttributionLabel
	_ = tpgresource.GetRegion
	_ = transport_tpg.Config{}
	_ = verify.ProjectRegex
)

const NetworkSecuritySecurityProfileAssetType string = "networksecurity.googleapis.com/SecurityProfile"

const NetworkSecuritySecurityProfileSchemaName string = "google_network_security_security_profile"

func ResourceNetworkSecuritySecurityProfile() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{
			"name": {
				Type:        schema.TypeString,
				Required:    true,
				ForceNew:    true,
				Description: `The name of the security profile resource.`,
			},
			"type": {
				Type:         schema.TypeString,
				Required:     true,
				ForceNew:     true,
				ValidateFunc: verify.ValidateEnum([]string{"THREAT_PREVENTION", "URL_FILTERING", "CUSTOM_MIRRORING", "CUSTOM_INTERCEPT"}),
				Description:  `The type of security profile. Possible values: ["THREAT_PREVENTION", "URL_FILTERING", "CUSTOM_MIRRORING", "CUSTOM_INTERCEPT"]`,
			},
			"custom_intercept_profile": {
				Type:     schema.TypeList,
				Optional: true,
				Description: `The configuration for defining the Intercept Endpoint Group used to
intercept traffic to third-party firewall appliances.`,
				MaxItems: 1,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"intercept_endpoint_group": {
							Type:     schema.TypeString,
							Required: true,
							Description: `The Intercept Endpoint Group to which matching traffic should be intercepted.
Format: projects/{project_id}/locations/global/interceptEndpointGroups/{endpoint_group_id}`,
						},
					},
				},
				ConflictsWith: []string{"threat_prevention_profile", "custom_mirroring_profile"},
			},
			"custom_mirroring_profile": {
				Type:     schema.TypeList,
				Optional: true,
				Description: `The configuration for defining the Mirroring Endpoint Group used to
mirror traffic to third-party collectors.`,
				MaxItems: 1,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"mirroring_endpoint_group": {
							Type:     schema.TypeString,
							Required: true,
							Description: `The Mirroring Endpoint Group to which matching traffic should be mirrored.
Format: projects/{project_id}/locations/global/mirroringEndpointGroups/{endpoint_group_id}`,
						},
					},
				},
				ConflictsWith: []string{"threat_prevention_profile", "custom_intercept_profile"},
			},
			"description": {
				Type:        schema.TypeString,
				Optional:    true,
				Description: `An optional description of the security profile. The Max length is 512 characters.`,
			},
			"labels": {
				Type:     schema.TypeMap,
				Optional: true,
				Description: `A map of key/value label pairs to assign to the resource.


**Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
Please refer to the field 'effective_labels' for all of the labels present on the resource.`,
				Elem: &schema.Schema{Type: schema.TypeString},
			},
			"location": {
				Type:     schema.TypeString,
				Optional: true,
				ForceNew: true,
				Description: `The location of the security profile.
The default value is 'global'.`,
				Default: "global",
			},
			"parent": {
				Type:     schema.TypeString,
				Optional: true,
				ForceNew: true,
				Description: `The name of the parent this security profile belongs to.
Format: organizations/{organization_id}.`,
			},
			"threat_prevention_profile": {
				Type:        schema.TypeList,
				Optional:    true,
				Description: `The threat prevention configuration for the security profile.`,
				MaxItems:    1,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"antivirus_overrides": {
							Type:        schema.TypeSet,
							Optional:    true,
							Description: `Defines what action to take for antivirus threats per protocol.`,
							Elem:        networksecuritySecurityProfileThreatPreventionProfileAntivirusOverridesSchema(),
							// Default schema.HashSchema is used.
						},
						"severity_overrides": {
							Type:        schema.TypeSet,
							Optional:    true,
							Description: `The configuration for overriding threats actions by severity match.`,
							Elem:        networksecuritySecurityProfileThreatPreventionProfileSeverityOverridesSchema(),
							// Default schema.HashSchema is used.
						},
						"threat_overrides": {
							Type:     schema.TypeSet,
							Optional: true,
							Description: `The configuration for overriding threats actions by threat id match.
If a threat is matched both by configuration provided in severity overrides
and threat overrides, the threat overrides action is applied.`,
							Elem: networksecuritySecurityProfileThreatPreventionProfileThreatOverridesSchema(),
							// Default schema.HashSchema is used.
						},
					},
				},
				ConflictsWith: []string{"custom_mirroring_profile", "custom_intercept_profile"},
			},
			"create_time": {
				Type:        schema.TypeString,
				Computed:    true,
				Description: `Time the security profile was created in UTC.`,
			},
			"effective_labels": {
				Type:        schema.TypeMap,
				Computed:    true,
				Description: `All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.`,
				Elem:        &schema.Schema{Type: schema.TypeString},
			},
			"etag": {
				Type:     schema.TypeString,
				Computed: true,
				Description: `This checksum is computed by the server based on the value of other fields,
and may be sent on update and delete requests to ensure the client has an up-to-date
value before proceeding.`,
			},
			"self_link": {
				Type:        schema.TypeString,
				Computed:    true,
				Description: `Server-defined URL of this resource.`,
			},
			"terraform_labels": {
				Type:     schema.TypeMap,
				Computed: true,
				Description: `The combination of labels configured directly on the resource
 and default labels configured on the provider.`,
				Elem: &schema.Schema{Type: schema.TypeString},
			},
			"update_time": {
				Type:        schema.TypeString,
				Computed:    true,
				Description: `Time the security profile was updated in UTC.`,
			},
		},
		UseJSONNumber: true,
	}
}

func networksecuritySecurityProfileThreatPreventionProfileSeverityOverridesSchema() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{
			"action": {
				Type:         schema.TypeString,
				Required:     true,
				ValidateFunc: verify.ValidateEnum([]string{"ALERT", "ALLOW", "DEFAULT_ACTION", "DENY"}),
				Description:  `Threat action override. Possible values: ["ALERT", "ALLOW", "DEFAULT_ACTION", "DENY"]`,
			},
			"severity": {
				Type:         schema.TypeString,
				Required:     true,
				ValidateFunc: verify.ValidateEnum([]string{"CRITICAL", "HIGH", "INFORMATIONAL", "LOW", "MEDIUM"}),
				Description:  `Severity level to match. Possible values: ["CRITICAL", "HIGH", "INFORMATIONAL", "LOW", "MEDIUM"]`,
			},
		},
	}
}

func networksecuritySecurityProfileThreatPreventionProfileThreatOverridesSchema() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{
			"action": {
				Type:         schema.TypeString,
				Required:     true,
				ValidateFunc: verify.ValidateEnum([]string{"ALERT", "ALLOW", "DEFAULT_ACTION", "DENY"}),
				Description:  `Threat action. Possible values: ["ALERT", "ALLOW", "DEFAULT_ACTION", "DENY"]`,
			},
			"threat_id": {
				Type:        schema.TypeString,
				Required:    true,
				Description: `Vendor-specific ID of a threat to override.`,
			},
		},
	}
}

func networksecuritySecurityProfileThreatPreventionProfileAntivirusOverridesSchema() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{
			"action": {
				Type:         schema.TypeString,
				Required:     true,
				ValidateFunc: verify.ValidateEnum([]string{"ALERT", "ALLOW", "DEFAULT_ACTION", "DENY"}),
				Description:  `Threat action override. For some threat types, only a subset of actions applies. Possible values: ["ALERT", "ALLOW", "DEFAULT_ACTION", "DENY"]`,
			},
			"protocol": {
				Type:         schema.TypeString,
				Required:     true,
				ValidateFunc: verify.ValidateEnum([]string{"SMTP", "SMB", "POP3", "IMAP", "HTTP2", "HTTP", "FTP"}),
				Description:  `Required protocol to match. Possible values: ["SMTP", "SMB", "POP3", "IMAP", "HTTP2", "HTTP", "FTP"]`,
			},
		},
	}
}
