// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package bigqueryanalyticshub

import (
	"fmt"

	"github.com/GoogleCloudPlatform/terraform-google-conversion/v2/tfplan2cai/converters/google/resources/cai"
	"github.com/hashicorp/terraform-provider-google-beta/google-beta/tpgresource"
	transport_tpg "github.com/hashicorp/terraform-provider-google-beta/google-beta/transport"
)

// Provide a separate asset type constant so we don't have to worry about name conflicts between IAM and non-IAM converter files
const BigqueryAnalyticsHubListingIAMAssetType string = "analyticshub.googleapis.com/Listing"

func ResourceConverterBigqueryAnalyticsHubListingIamPolicy() cai.ResourceConverter {
	return cai.ResourceConverter{
		AssetType:         BigqueryAnalyticsHubListingIAMAssetType,
		Convert:           GetBigqueryAnalyticsHubListingIamPolicyCaiObject,
		MergeCreateUpdate: MergeBigqueryAnalyticsHubListingIamPolicy,
	}
}

func ResourceConverterBigqueryAnalyticsHubListingIamBinding() cai.ResourceConverter {
	return cai.ResourceConverter{
		AssetType:         BigqueryAnalyticsHubListingIAMAssetType,
		Convert:           GetBigqueryAnalyticsHubListingIamBindingCaiObject,
		FetchFullResource: FetchBigqueryAnalyticsHubListingIamPolicy,
		MergeCreateUpdate: MergeBigqueryAnalyticsHubListingIamBinding,
		MergeDelete:       MergeBigqueryAnalyticsHubListingIamBindingDelete,
	}
}

func ResourceConverterBigqueryAnalyticsHubListingIamMember() cai.ResourceConverter {
	return cai.ResourceConverter{
		AssetType:         BigqueryAnalyticsHubListingIAMAssetType,
		Convert:           GetBigqueryAnalyticsHubListingIamMemberCaiObject,
		FetchFullResource: FetchBigqueryAnalyticsHubListingIamPolicy,
		MergeCreateUpdate: MergeBigqueryAnalyticsHubListingIamMember,
		MergeDelete:       MergeBigqueryAnalyticsHubListingIamMemberDelete,
	}
}

func GetBigqueryAnalyticsHubListingIamPolicyCaiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) ([]cai.Asset, error) {
	return newBigqueryAnalyticsHubListingIamAsset(d, config, cai.ExpandIamPolicyBindings)
}

func GetBigqueryAnalyticsHubListingIamBindingCaiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) ([]cai.Asset, error) {
	return newBigqueryAnalyticsHubListingIamAsset(d, config, cai.ExpandIamRoleBindings)
}

func GetBigqueryAnalyticsHubListingIamMemberCaiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) ([]cai.Asset, error) {
	return newBigqueryAnalyticsHubListingIamAsset(d, config, cai.ExpandIamMemberBindings)
}

func MergeBigqueryAnalyticsHubListingIamPolicy(existing, incoming cai.Asset) cai.Asset {
	existing.IAMPolicy = incoming.IAMPolicy
	return existing
}

func MergeBigqueryAnalyticsHubListingIamBinding(existing, incoming cai.Asset) cai.Asset {
	return cai.MergeIamAssets(existing, incoming, cai.MergeAuthoritativeBindings)
}

func MergeBigqueryAnalyticsHubListingIamBindingDelete(existing, incoming cai.Asset) cai.Asset {
	return cai.MergeDeleteIamAssets(existing, incoming, cai.MergeDeleteAuthoritativeBindings)
}

func MergeBigqueryAnalyticsHubListingIamMember(existing, incoming cai.Asset) cai.Asset {
	return cai.MergeIamAssets(existing, incoming, cai.MergeAdditiveBindings)
}

func MergeBigqueryAnalyticsHubListingIamMemberDelete(existing, incoming cai.Asset) cai.Asset {
	return cai.MergeDeleteIamAssets(existing, incoming, cai.MergeDeleteAdditiveBindings)
}

func newBigqueryAnalyticsHubListingIamAsset(
	d tpgresource.TerraformResourceData,
	config *transport_tpg.Config,
	expandBindings func(d tpgresource.TerraformResourceData) ([]cai.IAMBinding, error),
) ([]cai.Asset, error) {
	bindings, err := expandBindings(d)
	if err != nil {
		return []cai.Asset{}, fmt.Errorf("expanding bindings: %v", err)
	}

	name, err := cai.AssetName(d, config, "//analyticshub.googleapis.com/projects/{{project}}/locations/{{location}}/dataExchanges/{{data_exchange_id}}/listings/{{listing_id}}")
	if err != nil {
		return []cai.Asset{}, err
	}

	return []cai.Asset{{
		Name: name,
		Type: BigqueryAnalyticsHubListingIAMAssetType,
		IAMPolicy: &cai.IAMPolicy{
			Bindings: bindings,
		},
	}}, nil
}

func FetchBigqueryAnalyticsHubListingIamPolicy(d tpgresource.TerraformResourceData, config *transport_tpg.Config) (cai.Asset, error) {
	// Check if the identity field returns a value
	if _, ok := d.GetOk("location"); !ok {
		return cai.Asset{}, cai.ErrEmptyIdentityField
	}
	if _, ok := d.GetOk("data_exchange_id"); !ok {
		return cai.Asset{}, cai.ErrEmptyIdentityField
	}
	if _, ok := d.GetOk("listing_id"); !ok {
		return cai.Asset{}, cai.ErrEmptyIdentityField
	}

	return cai.FetchIamPolicy(
		BigqueryAnalyticsHubListingIamUpdaterProducer,
		d,
		config,
		"//analyticshub.googleapis.com/projects/{{project}}/locations/{{location}}/dataExchanges/{{data_exchange_id}}/listings/{{listing_id}}",
		BigqueryAnalyticsHubListingIAMAssetType,
	)
}
