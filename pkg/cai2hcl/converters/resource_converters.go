// ----------------------------------------------------------------------------
//
//	***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//	This file is automatically generated by Magic Modules and manual
//	changes will be clobbered when the file is regenerated.
//
//	Please read more about how to change this file in
//	.github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------
package converters

import (
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/cai2hcl/models"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/alloydb"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/apigee"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/apphub"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/backupdr"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/beyondcorp"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/bigquery"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/binaryauthorization"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/blockchainnodeengine"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/certificatemanager"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/cloudasset"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/cloudbuild"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/cloudbuildv2"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/clouddeploy"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/cloudfunctions2"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/compute"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/networksecurity"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/pubsub"
	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/services/resourcemanager"

	tpg_provider "github.com/GoogleCloudPlatform/terraform-google-conversion/v6/pkg/provider"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

var provider *schema.Provider = tpg_provider.Provider()

// ConverterMap is a collection of converters instances, indexed by cai asset type.
var ConverterMap = map[string]map[string]models.Cai2hclConverter{
	// ####### START handwritten resources ###########
	resourcemanager.ProjectAssetType: {
		"Default": resourcemanager.NewProjectCai2hclConverter(provider),
	},
	compute.ComputeInstanceAssetType: {
		"Default": compute.NewComputeInstanceCai2hclConverter(provider),
	},
	// ####### END handwritten resources ###########
	alloydb.AlloydbBackupAssetType: {
		"Default": alloydb.NewAlloydbBackupCai2hclConverter(provider),
	},
	alloydb.AlloydbClusterAssetType: {
		"Default": alloydb.NewAlloydbClusterCai2hclConverter(provider),
	},
	alloydb.AlloydbInstanceAssetType: {
		"Default": alloydb.NewAlloydbInstanceCai2hclConverter(provider),
	},
	apigee.ApigeeInstanceAssetType: {
		"Default": apigee.NewApigeeInstanceCai2hclConverter(provider),
	},
	apphub.ApphubApplicationAssetType: {
		"Default": apphub.NewApphubApplicationCai2hclConverter(provider),
	},
	apphub.ApphubServiceAssetType: {
		"Default": apphub.NewApphubServiceCai2hclConverter(provider),
	},
	apphub.ApphubWorkloadAssetType: {
		"Default": apphub.NewApphubWorkloadCai2hclConverter(provider),
	},
	backupdr.BackupDRBackupPlanAssetType: {
		"Default": backupdr.NewBackupDRBackupPlanCai2hclConverter(provider),
	},
	backupdr.BackupDRBackupVaultAssetType: {
		"Default": backupdr.NewBackupDRBackupVaultCai2hclConverter(provider),
	},
	beyondcorp.BeyondcorpAppConnectionAssetType: {
		"Default": beyondcorp.NewBeyondcorpAppConnectionCai2hclConverter(provider),
	},
	beyondcorp.BeyondcorpAppConnectorAssetType: {
		"Default": beyondcorp.NewBeyondcorpAppConnectorCai2hclConverter(provider),
	},
	beyondcorp.BeyondcorpAppGatewayAssetType: {
		"Default": beyondcorp.NewBeyondcorpAppGatewayCai2hclConverter(provider),
	},
	bigquery.BigQueryDatasetAssetType: {
		"Default": bigquery.NewBigQueryDatasetCai2hclConverter(provider),
	},
	binaryauthorization.BinaryAuthorizationAttestorAssetType: {
		"Default": binaryauthorization.NewBinaryAuthorizationAttestorCai2hclConverter(provider),
	},
	blockchainnodeengine.BlockchainNodeEngineBlockchainNodeAssetType: {
		"Default": blockchainnodeengine.NewBlockchainNodeEngineBlockchainNodesCai2hclConverter(provider),
	},
	certificatemanager.CertificateManagerCertificateAssetType: {
		"Default": certificatemanager.NewCertificateManagerCertificateCai2hclConverter(provider),
	},
	cloudasset.CloudAssetFeedAssetType: {
		"CloudAssetFolderFeed":       cloudasset.NewCloudAssetFolderFeedCai2hclConverter(provider),
		"CloudAssetOrganizationFeed": cloudasset.NewCloudAssetOrganizationFeedCai2hclConverter(provider),
		"CloudAssetProjectFeed":      cloudasset.NewCloudAssetProjectFeedCai2hclConverter(provider),
	},
	cloudbuild.CloudBuildBitbucketServerConfigAssetType: {
		"Default": cloudbuild.NewCloudBuildBitbucketServerConfigCai2hclConverter(provider),
	},
	cloudbuildv2.Cloudbuildv2ConnectionAssetType: {
		"Default": cloudbuildv2.NewCloudbuildv2ConnectionCai2hclConverter(provider),
	},
	cloudbuildv2.Cloudbuildv2RepositoryAssetType: {
		"Default": cloudbuildv2.NewCloudbuildv2RepositoryCai2hclConverter(provider),
	},
	clouddeploy.ClouddeployCustomTargetTypeAssetType: {
		"Default": clouddeploy.NewClouddeployCustomTargetTypeCai2hclConverter(provider),
	},
	cloudfunctions2.Cloudfunctions2FunctionAssetType: {
		"Default": cloudfunctions2.NewCloudfunctions2functionCai2hclConverter(provider),
	},
	compute.ComputeAddressAssetType: {
		"Default": compute.NewComputeAddressCai2hclConverter(provider),
	},
	compute.ComputeAutoscalerAssetType: {
		"ComputeAutoscaler":       compute.NewComputeAutoscalerCai2hclConverter(provider),
		"ComputeRegionAutoscaler": compute.NewComputeRegionAutoscalerCai2hclConverter(provider),
	},
	compute.ComputeBackendBucketAssetType: {
		"Default": compute.NewComputeBackendBucketCai2hclConverter(provider),
	},
	compute.ComputeBackendServiceAssetType: {
		"Default": compute.NewComputeBackendServiceCai2hclConverter(provider),
	},
	compute.ComputeDiskAssetType: {
		"Default": compute.NewComputeDiskCai2hclConverter(provider),
	},
	compute.ComputeExternalVpnGatewayAssetType: {
		"Default": compute.NewComputeExternalVpnGatewayCai2hclConverter(provider),
	},
	compute.ComputeFirewallAssetType: {
		"Default": compute.NewComputeFirewallCai2hclConverter(provider),
	},
	compute.ComputeFirewallPolicyAssetType: {
		"Default": compute.NewComputeFirewallPolicyCai2hclConverter(provider),
	},
	compute.ComputeGlobalAddressAssetType: {
		"Default": compute.NewComputeGlobalAddressCai2hclConverter(provider),
	},
	compute.ComputeHealthCheckAssetType: {
		"Default": compute.NewComputeHealthCheckCai2hclConverter(provider),
	},
	compute.ComputeImageAssetType: {
		"Default": compute.NewComputeImageCai2hclConverter(provider),
	},
	compute.ComputeNetworkAssetType: {
		"Default": compute.NewComputeNetworkCai2hclConverter(provider),
	},
	compute.ComputeSubnetworkAssetType: {
		"Default": compute.NewComputeSubnetworkCai2hclConverter(provider),
	},
	compute.ComputeUrlMapAssetType: {
		"Default": compute.NewComputeUrlMapCai2hclConverter(provider),
	},
	networksecurity.NetworkSecurityServerTlsPolicyAssetType: {
		"Default": networksecurity.NewNetworkSecurityServerTlsPolicyCai2hclConverter(provider),
	},
	pubsub.PubsubSubscriptionAssetType: {
		"Default": pubsub.NewPubsubSubscriptionCai2hclConverter(provider),
	},
	pubsub.PubsubTopicAssetType: {
		"Default": pubsub.NewPubsubTopicCai2hclConverter(provider),
	},
}
