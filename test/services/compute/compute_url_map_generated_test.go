// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package compute_test

import (
	"testing"

	"github.com/GoogleCloudPlatform/terraform-google-conversion/v7/test"
)

func TestAccComputeUrlMap_urlMapBucketAndServiceExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapTrafficDirectorRouteExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapTrafficDirectorRoutePartialExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapTrafficDirectorPathExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapTrafficDirectorPathPartialExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapHeaderBasedRoutingExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapParameterBasedRoutingExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapTestHeadersExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapTestExpectedOutputUrlExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapTestRedirectResponseCodeExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapPathTemplateMatchExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
func TestAccComputeUrlMap_urlMapCustomErrorResponsePolicyExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"default_custom_error_response_policy.error_response_rule",
			"depends_on",
			"for_each",
			"lifecycle",
			"path_matcher.default_custom_error_response_policy.error_response_rule",
			"path_matcher.path_rule.custom_error_response_policy.error_response_rule",
			"provider",
		},
		[]string{},
	)
}
