// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package serviceusage

import (
	"reflect"

	"github.com/GoogleCloudPlatform/terraform-google-conversion/v2/tfplan2cai/converters/google/resources/tpgresource"
	transport_tpg "github.com/GoogleCloudPlatform/terraform-google-conversion/v2/tfplan2cai/converters/google/resources/transport"
)

const ServiceUsageConsumerQuotaOverrideAssetType string = "serviceusage.googleapis.com/ConsumerQuotaOverride"

func ResourceConverterServiceUsageConsumerQuotaOverride() tpgresource.ResourceConverter {
	return tpgresource.ResourceConverter{
		AssetType: ServiceUsageConsumerQuotaOverrideAssetType,
		Convert:   GetServiceUsageConsumerQuotaOverrideCaiObject,
	}
}

func GetServiceUsageConsumerQuotaOverrideCaiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) ([]tpgresource.Asset, error) {
	name, err := tpgresource.AssetName(d, config, "//serviceusage.googleapis.com/projects/{{project}}/services/{{service}}/consumerQuotaMetrics/{{metric}}/limits/{{limit}}/consumerOverrides/")
	if err != nil {
		return []tpgresource.Asset{}, err
	}
	if obj, err := GetServiceUsageConsumerQuotaOverrideApiObject(d, config); err == nil {
		return []tpgresource.Asset{{
			Name: name,
			Type: ServiceUsageConsumerQuotaOverrideAssetType,
			Resource: &tpgresource.AssetResource{
				Version:              "v1beta1",
				DiscoveryDocumentURI: "https://www.googleapis.com/discovery/v1/apis/serviceusage/v1beta1/rest",
				DiscoveryName:        "ConsumerQuotaOverride",
				Data:                 obj,
			},
		}}, nil
	} else {
		return []tpgresource.Asset{}, err
	}
}

func GetServiceUsageConsumerQuotaOverrideApiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) (map[string]interface{}, error) {
	obj := make(map[string]interface{})
	overrideValueProp, err := expandServiceUsageConsumerQuotaOverrideOverrideValue(d.Get("override_value"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("override_value"); !tpgresource.IsEmptyValue(reflect.ValueOf(overrideValueProp)) && (ok || !reflect.DeepEqual(v, overrideValueProp)) {
		obj["overrideValue"] = overrideValueProp
	}
	dimensionsProp, err := expandServiceUsageConsumerQuotaOverrideDimensions(d.Get("dimensions"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("dimensions"); !tpgresource.IsEmptyValue(reflect.ValueOf(dimensionsProp)) && (ok || !reflect.DeepEqual(v, dimensionsProp)) {
		obj["dimensions"] = dimensionsProp
	}

	return obj, nil
}

func expandServiceUsageConsumerQuotaOverrideOverrideValue(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (interface{}, error) {
	return v, nil
}

func expandServiceUsageConsumerQuotaOverrideDimensions(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (map[string]string, error) {
	if v == nil {
		return map[string]string{}, nil
	}
	m := make(map[string]string)
	for k, val := range v.(map[string]interface{}) {
		m[k] = val.(string)
	}
	return m, nil
}
