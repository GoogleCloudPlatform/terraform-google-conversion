// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This code is generated by Magic Modules using the following:
//
//     Configuration: https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/products/datastream/PrivateConnection.yaml
//     Template:      https://github.com/GoogleCloudPlatform/magic-modules/tree/main/mmv1/templates/tgc_next/services/resource.go.tmpl
//
//     DO NOT EDIT this file directly. Any changes made to this file will be
//     overwritten during the next generation cycle.
//
// ----------------------------------------------------------------------------

package datastream

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

const DatastreamPrivateConnectionAssetType string = "datastream.googleapis.com/PrivateConnection"

const DatastreamPrivateConnectionSchemaName string = "google_datastream_private_connection"

func ResourceDatastreamPrivateConnection() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{
			"display_name": {
				Type:        schema.TypeString,
				Required:    true,
				ForceNew:    true,
				Description: `Display name.`,
			},
			"location": {
				Type:        schema.TypeString,
				Required:    true,
				ForceNew:    true,
				Description: `The name of the location this private connection is located in.`,
			},
			"private_connection_id": {
				Type:        schema.TypeString,
				Required:    true,
				ForceNew:    true,
				Description: `The private connectivity identifier.`,
			},
			"create_without_validation": {
				Type:        schema.TypeBool,
				Optional:    true,
				ForceNew:    true,
				Description: `If set to true, will skip validations.`,
				Default:     false,
			},
			"labels": {
				Type:     schema.TypeMap,
				Optional: true,
				Description: `Labels.

**Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
Please refer to the field 'effective_labels' for all of the labels present on the resource.`,
				Elem: &schema.Schema{Type: schema.TypeString},
			},
			"psc_interface_config": {
				Type:     schema.TypeList,
				Optional: true,
				ForceNew: true,
				Description: `The PSC Interface configuration is used to create PSC Interface
between Datastream and the consumer's PSC.`,
				MaxItems: 1,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"network_attachment": {
							Type:     schema.TypeString,
							Required: true,
							ForceNew: true,
							Description: `Fully qualified name of the network attachment that Datastream will connect to.
Format: projects/{project}/regions/{region}/networkAttachments/{name}

To get Datastream project for the accepted list:
'gcloud datastream private-connections create [PC ID] --location=[LOCATION] --network-attachment=[NA URI] --validate-only --display-name=[ANY STRING]'
Add Datastream project to the attachment accepted list:
'gcloud compute network-attachments update [NA URI] --region=[NA region] --producer-accept-list=[TP from prev command]'`,
						},
					},
				},
				ExactlyOneOf: []string{"vpc_peering_config", "psc_interface_config"},
			},
			"vpc_peering_config": {
				Type:     schema.TypeList,
				Optional: true,
				ForceNew: true,
				Description: `The VPC Peering configuration is used to create VPC peering
between Datastream and the consumer's VPC.`,
				MaxItems: 1,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"subnet": {
							Type:        schema.TypeString,
							Required:    true,
							ForceNew:    true,
							Description: `A free subnet for peering. (CIDR of /29)`,
						},
						"vpc": {
							Type:     schema.TypeString,
							Required: true,
							ForceNew: true,
							Description: `Fully qualified name of the VPC that Datastream will peer to.
Format: projects/{project}/global/{networks}/{name}`,
						},
					},
				},
				ExactlyOneOf: []string{"vpc_peering_config", "psc_interface_config"},
			},
			"effective_labels": {
				Type:        schema.TypeMap,
				Computed:    true,
				ForceNew:    true,
				Description: `All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.`,
				Elem:        &schema.Schema{Type: schema.TypeString},
			},
			"error": {
				Type:        schema.TypeList,
				Computed:    true,
				Description: `The PrivateConnection error in case of failure.`,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"details": {
							Type:        schema.TypeMap,
							Optional:    true,
							Description: `A list of messages that carry the error details.`,
							Elem:        &schema.Schema{Type: schema.TypeString},
						},
						"message": {
							Type:        schema.TypeString,
							Optional:    true,
							Description: `A message containing more information about the error that occurred.`,
						},
					},
				},
			},
			"name": {
				Type:        schema.TypeString,
				Computed:    true,
				Description: `The resource's name.`,
			},
			"state": {
				Type:        schema.TypeString,
				Computed:    true,
				Description: `State of the PrivateConnection.`,
			},
			"terraform_labels": {
				Type:     schema.TypeMap,
				Computed: true,
				Description: `The combination of labels configured directly on the resource
 and default labels configured on the provider.`,
				Elem: &schema.Schema{Type: schema.TypeString},
			},
			"project": {
				Type:     schema.TypeString,
				Optional: true,
				Computed: true,
				ForceNew: true,
			},
		},
		UseJSONNumber: true,
	}
}
