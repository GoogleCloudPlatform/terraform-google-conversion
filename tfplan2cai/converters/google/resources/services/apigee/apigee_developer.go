// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package apigee

import (
	"reflect"

	"github.com/GoogleCloudPlatform/terraform-google-conversion/v5/tfplan2cai/converters/google/resources/cai"
	"github.com/hashicorp/terraform-provider-google-beta/google-beta/tpgresource"
	transport_tpg "github.com/hashicorp/terraform-provider-google-beta/google-beta/transport"
)

const ApigeeDeveloperAssetType string = "apigee.googleapis.com/Developer"

func ResourceConverterApigeeDeveloper() cai.ResourceConverter {
	return cai.ResourceConverter{
		AssetType: ApigeeDeveloperAssetType,
		Convert:   GetApigeeDeveloperCaiObject,
	}
}

func GetApigeeDeveloperCaiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) ([]cai.Asset, error) {
	name, err := cai.AssetName(d, config, "//apigee.googleapis.com/{{org_id}}/developers/{{email}}")
	if err != nil {
		return []cai.Asset{}, err
	}
	if obj, err := GetApigeeDeveloperApiObject(d, config); err == nil {
		return []cai.Asset{{
			Name: name,
			Type: ApigeeDeveloperAssetType,
			Resource: &cai.AssetResource{
				Version:              "v1",
				DiscoveryDocumentURI: "https://www.googleapis.com/discovery/v1/apis/apigee/v1/rest",
				DiscoveryName:        "Developer",
				Data:                 obj,
			},
		}}, nil
	} else {
		return []cai.Asset{}, err
	}
}

func GetApigeeDeveloperApiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) (map[string]interface{}, error) {
	obj := make(map[string]interface{})
	emailProp, err := expandApigeeDeveloperEmail(d.Get("email"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("email"); !tpgresource.IsEmptyValue(reflect.ValueOf(emailProp)) && (ok || !reflect.DeepEqual(v, emailProp)) {
		obj["email"] = emailProp
	}
	firstNameProp, err := expandApigeeDeveloperFirstName(d.Get("first_name"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("first_name"); !tpgresource.IsEmptyValue(reflect.ValueOf(firstNameProp)) && (ok || !reflect.DeepEqual(v, firstNameProp)) {
		obj["firstName"] = firstNameProp
	}
	lastNameProp, err := expandApigeeDeveloperLastName(d.Get("last_name"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("last_name"); !tpgresource.IsEmptyValue(reflect.ValueOf(lastNameProp)) && (ok || !reflect.DeepEqual(v, lastNameProp)) {
		obj["lastName"] = lastNameProp
	}
	userNameProp, err := expandApigeeDeveloperUserName(d.Get("user_name"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("user_name"); !tpgresource.IsEmptyValue(reflect.ValueOf(userNameProp)) && (ok || !reflect.DeepEqual(v, userNameProp)) {
		obj["userName"] = userNameProp
	}
	attributesProp, err := expandApigeeDeveloperAttributes(d.Get("attributes"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("attributes"); !tpgresource.IsEmptyValue(reflect.ValueOf(attributesProp)) && (ok || !reflect.DeepEqual(v, attributesProp)) {
		obj["attributes"] = attributesProp
	}

	return obj, nil
}

func expandApigeeDeveloperEmail(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (interface{}, error) {
	return v, nil
}

func expandApigeeDeveloperFirstName(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (interface{}, error) {
	return v, nil
}

func expandApigeeDeveloperLastName(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (interface{}, error) {
	return v, nil
}

func expandApigeeDeveloperUserName(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (interface{}, error) {
	return v, nil
}

func expandApigeeDeveloperAttributes(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (interface{}, error) {
	l := v.([]interface{})
	req := make([]interface{}, 0, len(l))
	for _, raw := range l {
		if raw == nil {
			continue
		}
		original := raw.(map[string]interface{})
		transformed := make(map[string]interface{})

		transformedName, err := expandApigeeDeveloperAttributesName(original["name"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedName); val.IsValid() && !tpgresource.IsEmptyValue(val) {
			transformed["name"] = transformedName
		}

		transformedValue, err := expandApigeeDeveloperAttributesValue(original["value"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedValue); val.IsValid() && !tpgresource.IsEmptyValue(val) {
			transformed["value"] = transformedValue
		}

		req = append(req, transformed)
	}
	return req, nil
}

func expandApigeeDeveloperAttributesName(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (interface{}, error) {
	return v, nil
}

func expandApigeeDeveloperAttributesValue(v interface{}, d tpgresource.TerraformResourceData, config *transport_tpg.Config) (interface{}, error) {
	return v, nil
}
