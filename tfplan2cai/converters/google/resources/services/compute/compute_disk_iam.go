// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package compute

import (
	"fmt"

	"github.com/GoogleCloudPlatform/terraform-google-conversion/v2/tfplan2cai/converters/google/resources/cai"
	"github.com/hashicorp/terraform-provider-google-beta/google-beta/tpgresource"
	transport_tpg "github.com/hashicorp/terraform-provider-google-beta/google-beta/transport"
)

// Provide a separate asset type constant so we don't have to worry about name conflicts between IAM and non-IAM converter files
const ComputeDiskIAMAssetType string = "compute.googleapis.com/Disk"

func ResourceConverterComputeDiskIamPolicy() cai.ResourceConverter {
	return cai.ResourceConverter{
		AssetType:         ComputeDiskIAMAssetType,
		Convert:           GetComputeDiskIamPolicyCaiObject,
		MergeCreateUpdate: MergeComputeDiskIamPolicy,
	}
}

func ResourceConverterComputeDiskIamBinding() cai.ResourceConverter {
	return cai.ResourceConverter{
		AssetType:         ComputeDiskIAMAssetType,
		Convert:           GetComputeDiskIamBindingCaiObject,
		FetchFullResource: FetchComputeDiskIamPolicy,
		MergeCreateUpdate: MergeComputeDiskIamBinding,
		MergeDelete:       MergeComputeDiskIamBindingDelete,
	}
}

func ResourceConverterComputeDiskIamMember() cai.ResourceConverter {
	return cai.ResourceConverter{
		AssetType:         ComputeDiskIAMAssetType,
		Convert:           GetComputeDiskIamMemberCaiObject,
		FetchFullResource: FetchComputeDiskIamPolicy,
		MergeCreateUpdate: MergeComputeDiskIamMember,
		MergeDelete:       MergeComputeDiskIamMemberDelete,
	}
}

func GetComputeDiskIamPolicyCaiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) ([]cai.Asset, error) {
	return newComputeDiskIamAsset(d, config, cai.ExpandIamPolicyBindings)
}

func GetComputeDiskIamBindingCaiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) ([]cai.Asset, error) {
	return newComputeDiskIamAsset(d, config, cai.ExpandIamRoleBindings)
}

func GetComputeDiskIamMemberCaiObject(d tpgresource.TerraformResourceData, config *transport_tpg.Config) ([]cai.Asset, error) {
	return newComputeDiskIamAsset(d, config, cai.ExpandIamMemberBindings)
}

func MergeComputeDiskIamPolicy(existing, incoming cai.Asset) cai.Asset {
	existing.IAMPolicy = incoming.IAMPolicy
	return existing
}

func MergeComputeDiskIamBinding(existing, incoming cai.Asset) cai.Asset {
	return cai.MergeIamAssets(existing, incoming, cai.MergeAuthoritativeBindings)
}

func MergeComputeDiskIamBindingDelete(existing, incoming cai.Asset) cai.Asset {
	return cai.MergeDeleteIamAssets(existing, incoming, cai.MergeDeleteAuthoritativeBindings)
}

func MergeComputeDiskIamMember(existing, incoming cai.Asset) cai.Asset {
	return cai.MergeIamAssets(existing, incoming, cai.MergeAdditiveBindings)
}

func MergeComputeDiskIamMemberDelete(existing, incoming cai.Asset) cai.Asset {
	return cai.MergeDeleteIamAssets(existing, incoming, cai.MergeDeleteAdditiveBindings)
}

func newComputeDiskIamAsset(
	d tpgresource.TerraformResourceData,
	config *transport_tpg.Config,
	expandBindings func(d tpgresource.TerraformResourceData) ([]cai.IAMBinding, error),
) ([]cai.Asset, error) {
	bindings, err := expandBindings(d)
	if err != nil {
		return []cai.Asset{}, fmt.Errorf("expanding bindings: %v", err)
	}

	name, err := cai.AssetName(d, config, "//compute.googleapis.com/projects/{{project}}/zones/{{zone}}/disks/{{name}}")
	if err != nil {
		return []cai.Asset{}, err
	}

	return []cai.Asset{{
		Name: name,
		Type: ComputeDiskIAMAssetType,
		IAMPolicy: &cai.IAMPolicy{
			Bindings: bindings,
		},
	}}, nil
}

func FetchComputeDiskIamPolicy(d tpgresource.TerraformResourceData, config *transport_tpg.Config) (cai.Asset, error) {
	// Check if the identity field returns a value
	if _, ok := d.GetOk("zone"); !ok {
		return cai.Asset{}, cai.ErrEmptyIdentityField
	}
	if _, ok := d.GetOk("name"); !ok {
		return cai.Asset{}, cai.ErrEmptyIdentityField
	}

	return cai.FetchIamPolicy(
		ComputeDiskIamUpdaterProducer,
		d,
		config,
		"//compute.googleapis.com/projects/{{project}}/zones/{{zone}}/disks/{{name}}",
		ComputeDiskIAMAssetType,
	)
}
