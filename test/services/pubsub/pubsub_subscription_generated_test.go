// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package pubsub_test

import (
	"testing"

	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/test"
)

func TestAccPubsubSubscription_pubsubSubscriptionPushExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionPullExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"enable_message_ordering",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionPullFilterExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionDeadLetterExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionPushBqExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionPushBqTableSchemaExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionPushBqServiceAccountExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionPushCloudstorageExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionPushCloudstorageAvroExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionPushCloudstorageServiceAccountExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionSingleSmtExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionMultipleSmtsExample(t *testing.T) {
	t.Skip("The dynamic block is in test configuration. The test takes time to fix.")
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
func TestAccPubsubSubscription_pubsubSubscriptionTagsExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"bigquery_config.service_account_email",
			"bigquery_config.table",
			"bigquery_config.use_table_schema",
			"cloud_storage_config",
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"provider",
		},
		[]string{},
	)
}
