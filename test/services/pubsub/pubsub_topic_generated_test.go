// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package pubsub_test

import (
	"testing"

	"github.com/GoogleCloudPlatform/terraform-google-conversion/v6/test"
)

func TestAccPubsubTopic_pubsubTopicBasicExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicGeoRestrictedExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicSchemaSettingsExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicIngestionKinesisExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicIngestionCloudStorageExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicIngestionAzureEventHubsExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicIngestionAwsMskExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicIngestionConfluentCloudExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicSingleSmtExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicMultipleSmtsExample(t *testing.T) {
	t.Skip("The dynamic block is in test configuration. The test takes time to fix.")
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
func TestAccPubsubTopic_pubsubTopicTagsExample(t *testing.T) {
	t.Parallel()

	test.BidirectionalConversion(
		t,
		[]string{
			"count",
			"depends_on",
			"for_each",
			"lifecycle",
			"message_retention_duration",
			"message_storage_policy.enforce_in_transit",
			"provider",
			"schema_settings",
		},
		[]string{},
	)
}
